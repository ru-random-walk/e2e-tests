name: Random Walk E2E

on:
  schedule:
    - cron: '0 0 * * *'
    - cron: '0 12 * * *'
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:
    inputs:
      testTag:
        description: Тег для запуска тестов по определенному сервису
        required: false
        default: "all"
        type: choice
        options:
          - all
          - auth-e2e
          - chat-e2e
          - club-e2e
          - matcher-e2e


jobs:
  checkout-repo:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

  build-proj-and-run-tests:
    runs-on: ubuntu-latest
    env:
      RW_DB_URL: ${{ secrets.RW_DB_URL }}
      SSH_HOST: ${{ secrets.SSH_HOST }}
      SSH_PORT: ${{ secrets.SSH_PORT }}
      SSH_USER: ${{ secrets.SSH_USER }}
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRV_KEY }}
      SSH_REMOTE_HOST: ${{ secrets.SSH_REMOTE_HOST }}
      SSH_REMOTE_PORT: ${{ secrets.SSH_REMOTE_PORT }}
      RW_AUTH_DB_USERNAME: ${{ secrets.RW_AUTH_DB_USERNAME }}
      RW_AUTH_DB_PASSWORD: ${{ secrets.RW_AUTH_DB_PASSWORD }}
      RW_CLUB_DB_USERNAME: ${{ secrets.RW_CLUB_DB_USERNAME }}
      RW_CLUB_DB_PASSWORD: ${{ secrets.RW_CLUB_DB_PASSWORD }}
      RW_CHAT_DB_USERNAME: ${{ secrets.RW_CHAT_DB_USERNAME }}
      RW_CHAT_DB_PASSWORD: ${{ secrets.RW_CHAT_DB_PASSWORD }}
      RW_MATCHER_DB_USERNAME: ${{ secrets.RW_MATCHER_DB_USERNAME }}
      RW_MATCHER_DB_PASSWORD: ${{ secrets.RW_MATCHER_DB_PASSWORD }}
      RW_API_AUTH_USERNAME: ${{ secrets.RW_API_AUTH_USERNAME }}
      RW_API_AUTH_PASSWORD: ${{ secrets.RW_API_AUTH_PASSWORD }}
      GOOGLE_USER_EMAIL: ${{ secrets.GOOGLE_USER_EMAIL }}
      GOOGLE_USER_PASSWORD: ${{ secrets.GOOGLE_USER_PASSWORD }}
      TEST_TOKEN: ${{ secrets.TEST_TOKEN }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build and Test Java Project
        run: |
          chmod +x gradlew
          ./gradlew clean --no-daemon
          echo "Running tests with tag: ${{ github.event.inputs.testTag }}"
          if [[ "${{ github.event.inputs.testTag }}" == "all" ]]; then
            ./gradlew test --no-daemon
          else
            ./gradlew test -PincludeTags=${{ github.event.inputs.testTag }} --no-daemon
          fi
        continue-on-error: true

      - name: Generate test report
        run: | 
          ./gradlew allureReport

      - name: Upload test report
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: ./build/reports/allure-report
